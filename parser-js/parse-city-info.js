const fs = require("fs")
const path = require("path")

// List of cities you want to fetch HTML for (you can loop through this list later if needed)
const cities = [
  "tartu",
  "kuala-lumpur",
  "krakow",
  "lagos",
  "burgas",
  "cuenca",
  "kobe",
  "cape-town",
  "zadar",
  "dallas",
  "copenhage",
  "tunis",
  "alicante",
  "makassar",
  "baku",
  "poznan",
  "tampa-fi",
  "montevideo",
  "bengaluru",
  "muscat",
  "kosice",
  "krabi",
  "bangkok",
  "hiroshima",
  "berlin",
  "chiang-rai",
  "alanya",
  "montego-bay",
  "split",
  "hangzhou",
  "leon",
  "salzburg",
  "san-salvador",
  "singapore",
  "san-juan",
  "bristol",
  "ningbo",
  "leeds",
  "las-vegas",
  "mendoza",
  "handan",
  "darmstadt",
  "catania",
  "gaborone",
  "redding-ca",
  "boulder-co",
  "norwich",
  "budapest",
  "cork",
  "toledo-oh",
  "nice",
  "kochi",
  "sharjah",
  "hagatna",
  "bursa",
  "oakland",
  "ulaanbaatar",
  "bordum",
  "victoria",
  "cebu",
  "stokholm",
  "cebu",
  "islamabad",
  "gaziantep",
  "lagos",
  "santa-barbara-ca",
  "shaffield",
  "ottawa",
  "porto-alegre",
  "hyderabad",
  "brega",
  "rimini",
  "bournemouth",
  "nassau",
  "anchorage-ak",
  "minneapolis-mn",
  "bucaramanga",
  "vilnius",
  "torreon",
  "beijing",
  "hoi-an",
  "kolkata",
  "srinagar",
  "istanbul",
  "fukuoka",
  "brisbane",
  "newport-beach-ca",
  "bari",
  "sargodha",
  "mombasa",
  "marrakesh",
  "venice",
  "osaka",
  "gdansk",
  "gold-coast",
  "rovaniemi",
  "davao",
  "phuket",
  "leeuwarden",
  "lausanne",
  "basel",
  "hvar",
  "chengdu",
  "lake-tahoe-ca",
  "st-george",
  "santa-fe-nm",
  "bruges",
  "jeju-island",
  "perth",
  "lima",
  "texel",
  "port-moresby",
  "oslo",
  "madrid",
  "vancouver",
  "batumi",
  "kaunas",
  "gothenburg",
  "belfast",
  "frankfurt",
  "belo-horizonte",
  "delhi",
  "nantes",
  "amalfi",
  "seville",
  "bucharest",
  "granada",
  "craiova",
  "hue",
  "lyon",
  "jakarta",
  "chisinau",
  "cologne",
  "taghazout",
  "ko-samui",
  "dusseldorf",
  "bordeaux",
  "chamonix",
  "okinawa-city",
  "daegu",
  "livingstone",
  "weligama",
  "jimbaran",
  "thimphu",
  "larnaca",
  "rome",
  "shenzhen",
  "limassol",
  "bandung",
  "pattaya",
  "turku",
  "karowice",
  "mallorca",
  "natal",
  "palawan",
  "stuttgart",
  "palermo",
  "brussels",
  "naples",
  "fuzhou",
  "houston-tx",
  "belem",
  "gori",
  "qingdao",
  "hefei",
  "espoo",
  "victoria-tx",
  "elkhart-in",
  "valdosta-ga",
  "jonesboro-ar",
  "idaho-falls-id",
  "terre-haute-in",
  "jena",
  "cambridge",
  "macon-ga",
  "abbotsford",
  "kelowna",
  "agra",
  "harbin",
  "san-ignacio",
  "nagasaki",
  "taiyuan",
  "port-arthur-tx",
  "rogers-ar",
  "waterloo",
  "dortmund",
  "malacca",
  "turin",
  "dakar",
  "kirkuk",
  "oulu",
  "bergen",
  "genoa",
  "campo-grande",
  "giza",
  "lanzhou",
  "macau",
  "orlando-fi",
  "douala",
  "nanyang",
  "bern",
  "zibo",
  "odessa-tx",
  "victorville-ca",
  "marbella",
  "tebessa",
  "corfu",
  "ahmedabad",
  "raipur",
  "dhanbad",
  "manila",
  "beirut",
  "sochi",
  "beersheba",
  "haifa",
  "izhevsk",
  "khartoum",
  "jerusalem",
  "odessa",
  "asmara",
  "tel-aviv",
  "accra",
  "cairo",
  "kuta-bali"
]

// Base URL to send requests to
const baseUrl = "https://nomads.com/modal/city/{city_name}?2024-11-18"
const outputFilePath = path.join(__dirname, "city_data_html")

// Function to save HTML to a file
const saveHtmlToFile = (city, htmlContent) => {
  const fileName = path.join(outputFilePath, `${city}_page.html`)
  fs.writeFileSync(fileName, htmlContent, "utf8")
  console.log(`Successfully saved HTML for ${city} as ${fileName}`)
}

// Loop through cities and fetch HTML for each
const fetchCitiesHtml = async () => {
  for (const city of cities) {
    const url = baseUrl.replace("{city_name}", city)
    await new Promise((resolve) => setTimeout(resolve, 1000))
    try {
      // Send GET request to the URL
      const response = await fetch(url, {
        headers: {
          referer: "https://nomads.com/",
          "User-Agent":
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36",
        },
      })

      // Check if the request was successful (status code 200)
      if (response.status === 200) {
        const response_html = await response.text()
        // Save the HTML content to a file
        saveHtmlToFile(city, response_html)
      } else {
        console.log(
          `Failed to retrieve HTML for ${city}. Status code: ${response.status}`
        )
      }
    } catch (error) {
      console.error(`Error occurred while processing ${city}:`, error)
    }
  }
}

fetchCitiesHtml()
